// 1D stepping stone model
initialize() {
initializeMutationRate(1e-7);
initializeMutationType("m1", 0.5, "f", 0.0); // neutral
initializeGenomicElementType("g1", m1, 1.0);
initializeGenomicElementType("g2", m1, 1.0);
initializeGenomicElementType("g3", m1, 1.0);
initializeGenomicElementType("g4", m1, 1.0);
initializeGenomicElement(g1, 0, 99999);
initializeGenomicElement(g2, 100000, 199999);
initializeGenomicElement(g3, 200000, 299999);
initializeGenomicElement(g4, 300000, 399999);
initializeRecombinationRate(1e-8);
defineConstant("subpopCount", nsub);
defineConstant("metapop", ne);
}

1 {


subpopSize = asInteger(metapop/subpopCount);
for (i in 1:subpopCount)
sim.addSubpop(i, subpopSize);
for (i in 2:subpopCount)
sim.subpopulations[i-1].setMigrationRates(i-1, 0.5);
for (i in 1:(subpopCount-1))
sim.subpopulations[i-1].setMigrationRates(i+1, 0.5);
}

20000 {
for (i in 2:subpopCount)
sim.subpopulations[i-1].setMigrationRates(i-1, 0.0);
for (i in 1:(subpopCount-1))
sim.subpopulations[i-1].setMigrationRates(i+1, 0.0);
}



20000:20300 late(){
if (sim.generation % 10 != 0) return;
allIndividuals = sim.subpopulations.individuals;
sampledIndividuals = c(sample(p1.individuals, 14),sample(p2.individuals, 14),sample(p3.individuals,14),sample(p4.individuals,14),sample(p5.individuals,14),sample(p6.individuals,14),sample(p7.individuals,14));
sampledIndividuals.genomes.outputVCF(filePath=paste(c(path,sim.generation,".vcf")),outputMultiallelics = F, append = T);}




